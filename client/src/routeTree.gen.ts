/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

import { Route as rootRouteImport } from './routes/__root'
import { Route as GamesGigaverseChatIdRouteImport } from './routes/games/gigaverse/$chatId'

const SettingsLazyRouteImport = createFileRoute('/settings')()
const ProfileLazyRouteImport = createFileRoute('/profile')()
const PaymentSuccessLazyRouteImport = createFileRoute('/payment-success')()
const IndexLazyRouteImport = createFileRoute('/')()

const SettingsLazyRoute = SettingsLazyRouteImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))
const ProfileLazyRoute = ProfileLazyRouteImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))
const PaymentSuccessLazyRoute = PaymentSuccessLazyRouteImport.update({
  id: '/payment-success',
  path: '/payment-success',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() =>
  import('./routes/payment-success.lazy').then((d) => d.Route),
)
const IndexLazyRoute = IndexLazyRouteImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRouteImport,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))
const GamesGigaverseChatIdRoute = GamesGigaverseChatIdRouteImport.update({
  id: '/games/gigaverse/$chatId',
  path: '/games/gigaverse/$chatId',
  getParentRoute: () => rootRouteImport,
} as any)

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}
export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}
export interface FileRoutesById {
  __root__: typeof rootRouteImport
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}
export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  id:
    | '__root__'
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  fileRoutesById: FileRoutesById
}
export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  PaymentSuccessLazyRoute: typeof PaymentSuccessLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  GamesGigaverseChatIdRoute: typeof GamesGigaverseChatIdRoute
}

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/payment-success': {
      id: '/payment-success'
      path: '/payment-success'
      fullPath: '/payment-success'
      preLoaderRoute: typeof PaymentSuccessLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyRouteImport
      parentRoute: typeof rootRouteImport
    }
    '/games/gigaverse/$chatId': {
      id: '/games/gigaverse/$chatId'
      path: '/games/gigaverse/$chatId'
      fullPath: '/games/gigaverse/$chatId'
      preLoaderRoute: typeof GamesGigaverseChatIdRouteImport
      parentRoute: typeof rootRouteImport
    }
  }
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  PaymentSuccessLazyRoute: PaymentSuccessLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  GamesGigaverseChatIdRoute: GamesGigaverseChatIdRoute,
}
export const routeTree = rootRouteImport
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()
