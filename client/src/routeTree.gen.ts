/* eslint-disable */

// @ts-nocheck

// noinspection JSUnusedGlobalSymbols

// This file was automatically generated by TanStack Router.
// You should NOT make any changes in this file as it will be overwritten.
// Additionally, you should also exclude this file from your linter and/or formatter to prevent it from being checked or modified.

import { createFileRoute } from '@tanstack/react-router'

// Import Routes

import { Route as rootRoute } from './routes/__root'
import { Route as GamesGigaverseChatIdImport } from './routes/games/gigaverse/$chatId'

// Create Virtual Routes

const SettingsLazyImport = createFileRoute('/settings')()
const ProfileLazyImport = createFileRoute('/profile')()
const PaymentSuccessLazyImport = createFileRoute('/payment-success')()
const IndexLazyImport = createFileRoute('/')()

// Create/Update Routes

const SettingsLazyRoute = SettingsLazyImport.update({
  id: '/settings',
  path: '/settings',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/settings.lazy').then((d) => d.Route))

const ProfileLazyRoute = ProfileLazyImport.update({
  id: '/profile',
  path: '/profile',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/profile.lazy').then((d) => d.Route))

const PaymentSuccessLazyRoute = PaymentSuccessLazyImport.update({
  id: '/payment-success',
  path: '/payment-success',
  getParentRoute: () => rootRoute,
} as any).lazy(() =>
  import('./routes/payment-success.lazy').then((d) => d.Route),
)

const IndexLazyRoute = IndexLazyImport.update({
  id: '/',
  path: '/',
  getParentRoute: () => rootRoute,
} as any).lazy(() => import('./routes/index.lazy').then((d) => d.Route))

const GamesGigaverseChatIdRoute = GamesGigaverseChatIdImport.update({
  id: '/games/gigaverse/$chatId',
  path: '/games/gigaverse/$chatId',
  getParentRoute: () => rootRoute,
} as any)

// Populate the FileRoutesByPath interface

declare module '@tanstack/react-router' {
  interface FileRoutesByPath {
    '/': {
      id: '/'
      path: '/'
      fullPath: '/'
      preLoaderRoute: typeof IndexLazyImport
      parentRoute: typeof rootRoute
    }
    '/payment-success': {
      id: '/payment-success'
      path: '/payment-success'
      fullPath: '/payment-success'
      preLoaderRoute: typeof PaymentSuccessLazyImport
      parentRoute: typeof rootRoute
    }
    '/profile': {
      id: '/profile'
      path: '/profile'
      fullPath: '/profile'
      preLoaderRoute: typeof ProfileLazyImport
      parentRoute: typeof rootRoute
    }
    '/settings': {
      id: '/settings'
      path: '/settings'
      fullPath: '/settings'
      preLoaderRoute: typeof SettingsLazyImport
      parentRoute: typeof rootRoute
    }
    '/games/gigaverse/$chatId': {
      id: '/games/gigaverse/$chatId'
      path: '/games/gigaverse/$chatId'
      fullPath: '/games/gigaverse/$chatId'
      preLoaderRoute: typeof GamesGigaverseChatIdImport
      parentRoute: typeof rootRoute
    }
  }
}

// Create and export the route tree

export interface FileRoutesByFullPath {
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}

export interface FileRoutesByTo {
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}

export interface FileRoutesById {
  __root__: typeof rootRoute
  '/': typeof IndexLazyRoute
  '/payment-success': typeof PaymentSuccessLazyRoute
  '/profile': typeof ProfileLazyRoute
  '/settings': typeof SettingsLazyRoute
  '/games/gigaverse/$chatId': typeof GamesGigaverseChatIdRoute
}

export interface FileRouteTypes {
  fileRoutesByFullPath: FileRoutesByFullPath
  fullPaths:
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  fileRoutesByTo: FileRoutesByTo
  to:
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  id:
    | '__root__'
    | '/'
    | '/payment-success'
    | '/profile'
    | '/settings'
    | '/games/gigaverse/$chatId'
  fileRoutesById: FileRoutesById
}

export interface RootRouteChildren {
  IndexLazyRoute: typeof IndexLazyRoute
  PaymentSuccessLazyRoute: typeof PaymentSuccessLazyRoute
  ProfileLazyRoute: typeof ProfileLazyRoute
  SettingsLazyRoute: typeof SettingsLazyRoute
  GamesGigaverseChatIdRoute: typeof GamesGigaverseChatIdRoute
}

const rootRouteChildren: RootRouteChildren = {
  IndexLazyRoute: IndexLazyRoute,
  PaymentSuccessLazyRoute: PaymentSuccessLazyRoute,
  ProfileLazyRoute: ProfileLazyRoute,
  SettingsLazyRoute: SettingsLazyRoute,
  GamesGigaverseChatIdRoute: GamesGigaverseChatIdRoute,
}

export const routeTree = rootRoute
  ._addFileChildren(rootRouteChildren)
  ._addFileTypes<FileRouteTypes>()

/* ROUTE_MANIFEST_START
{
  "routes": {
    "__root__": {
      "filePath": "__root.tsx",
      "children": [
        "/",
        "/payment-success",
        "/profile",
        "/settings",
        "/games/gigaverse/$chatId"
      ]
    },
    "/": {
      "filePath": "index.lazy.tsx"
    },
    "/payment-success": {
      "filePath": "payment-success.lazy.tsx"
    },
    "/profile": {
      "filePath": "profile.lazy.tsx"
    },
    "/settings": {
      "filePath": "settings.lazy.tsx"
    },
    "/games/gigaverse/$chatId": {
      "filePath": "games/gigaverse/$chatId.tsx"
    }
  }
}
ROUTE_MANIFEST_END */
